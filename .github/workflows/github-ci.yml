name: Vercel Production Deployment

on:
  push:
    branches: [main]

jobs:
  build:
    name: Build & Prepare Vercel Output
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: install tsc alias
        run: npm install -g ts-alias

      - name: Build project
        run: npm run build

      - name: Run Vercel Build
        run: vercel build --token ${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Upload Vercel output
        uses: actions/upload-artifact@v4
        with:
          name: vercel-output
          path: .vercel/output

  deploy:
    name: Deploy to Vercel (Prebuilt)
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Download Vercel output
        uses: actions/download-artifact@v4
        with:
          name: vercel-output
          path: .vercel/output

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy Prebuilt to Vercel
        run: vercel deploy --prod --prebuilt --token ${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
